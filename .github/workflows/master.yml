name: Release

on:
  push:
    branches:
      - main # Change this to your main branch if different

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20' # Use your desired Node.js version

  #     - name: Install dependencies
  #       run: npm ci --include=dev

  #     - name: Build the application
  #       run: npm run build # Adjust if your build command is different
  tag:
    runs-on: ubuntu-latest
    name: 'Creating a tag'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use your desired Node.js version

      - name: Install dependencies
        run: npm ci --include=dev

      - name: Build the application
        run: npm run build # Adjust if your build command is different

      - name: Create a new version and release
        id: release
        run: |
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token to create a release

      - name: Create and push version tag
        if: steps.release.outputs.version != ''
        run: |
          TAG_NAME=v${{ steps.release.outputs.version }}
          git tag $TAG_NAME
          git push origin $TAG_NAME

    # build:
    # runs-on: ubuntu-latest
    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v4

    #   - name: Set up Node.js
    #     uses: actions/setup-node@v4
    #     with:
    #       node-version: '20' # Use your desired Node.js version

    #   - name: Install dependencies
    #     run: npm install

    #   - name: Build the application
    #     run: npm run build # Adjust if your build command is different

    #   - name: Set up Docker Buildx
    #     uses: docker/setup-buildx-action@v2

    #   - name: Log in to GitHub Container Registry
    #     uses: docker/login-action@v2
    #     with:
    #       registry: ghcr.io
    #       username: ${{ github.actor }} # Use the GitHub actor (the user triggering the action)
    #       password: ${{ secrets.GITHUB_TOKEN }} # Use the provided GitHub token

    #   - name: Build and push Docker image
    #     run: |
    #       VERSION=$(echo "${GITHUB_REF}" | grep -oP '(?<=tags\/v)[0-9]+\.[0-9]+\.[0-9]+')
    #       IMAGE_NAME=ghcr.io/${{ github.repository }}/express-typescript-service-template:${VERSION}  # Change `express-typescript-service-template` to your desired image name
    #       docker build -t $IMAGE_NAME .
    #       docker push $IMAGE_NAME

    #   - name: Create Release
    #     uses: softprops/action-gh-release@v1
    #     with:
    #       tag_name: ${{ github.ref }}
    #       release_name: Release ${{ github.ref }}
    #       body: |
    #         Changes in this release:
    #         - Your changes summary here.
    #       files: dist/**/* # Adjust if you want to attach built files
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub automatically provides this token
